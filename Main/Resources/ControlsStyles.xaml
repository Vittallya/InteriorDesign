<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:local="clr-namespace:Main.Resources">


    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <SolidColorBrush x:Key="Button.Static.Background" Color="#FF168BEF"/>
    <SolidColorBrush x:Key="Button.Static.Background1" Color="White"/>
    <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
    <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FF909090"/>
    <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF474747"/>
    <SolidColorBrush x:Key="Button.Disabled.Foreground1" Color="White"/>

    <Style TargetType="Button" x:Key="ButtonLogin">

        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template" Value="{DynamicResource ButtonLoginT}"/>
    </Style>

    <Style TargetType="Button" x:Key="ButtonSkip">

        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template" Value="{DynamicResource ButtonLoginT}"/>
    </Style>
    
    <ControlTemplate x:Key="ButtonLoginT" TargetType="{x:Type Button}">
        <Border 
                        CornerRadius="4"
                        x:Name="border" 
                        Background="{TemplateBinding Background}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Border>
        <ControlTemplate.Triggers>

            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                         Duration="0:0:0.2"
                                                         To="0.7"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>

                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                         Duration="0:0:0.2"
                                                         To="1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>

            </Trigger>

            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>



    <Style TargetType="TextBox" x:Key="LoginTextBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Grid>
                        <TextBlock 
                                            
                                            Margin="4 0 0 4" 
                                            x:Name="textBlock" 
                                            Foreground="Gray" 
                                            FontSize="16"  
                                            Text="Логин:" 
                                            RenderTransformOrigin="0,0"/>

                        <TextBox 
                                            BorderThickness="0" 
                                            Height="27" 
                                            x:Name="textBox"  
                                            IsTabStop="{TemplateBinding IsTabStop}"
                                            FontFamily="{TemplateBinding FontFamily}"
                                            FontSize="{TemplateBinding FontSize}"   
                                            DataContext="{Binding RelativeSource={RelativeSource AncestorType=Page}, Path=DataContext}"
                                            Text="{Binding Login, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                            BorderBrush="{x:Null}" 
                                            Background="{x:Null}"/>


                        <Border VerticalAlignment="Bottom" Height="2" Background="LightGray"/>
                        <Border 
                                            x:Name="border_selected" 
                                            VerticalAlignment="Bottom" 
                                            Height="2" 
                                            Background="#FF168BEF" RenderTransformOrigin="0,0.5">
                            <Border.RenderTransform>
                                <ScaleTransform ScaleX="0"/>
                            </Border.RenderTransform>
                        </Border>


                    </Grid>

                    <ControlTemplate.Triggers>

                        <DataTrigger Binding="{Binding ElementName=textBox, Path=IsFocused}" Value="True">

                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation 
                                                            Storyboard.TargetName="border_selected" 
                                                            Duration="0:0:0.7" To="1" 
                                                            Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)">
                                            <DoubleAnimation.EasingFunction>
                                                <ElasticEase Oscillations="0"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>

                                        <ColorAnimationUsingKeyFrames
                                                                    Storyboard.TargetName="textBlock" 
                                                                    Duration="0:0:0.7"
                                                                    Storyboard.TargetProperty="(TextBox.Foreground).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="#FF168BEF" />
                                        </ColorAnimationUsingKeyFrames>

                                    </Storyboard>
                                </BeginStoryboard>

                            </DataTrigger.EnterActions>

                            <DataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation 
                                                            Storyboard.TargetName="border_selected" 
                                                            Duration="0:0:0.7" To="0" 
                                                            Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)">
                                            <DoubleAnimation.EasingFunction>
                                                <ElasticEase Oscillations="0"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>

                                        <ColorAnimationUsingKeyFrames
                                                                    Storyboard.TargetName="textBlock" 
                                                                    Duration="0:0:0.7"
                                                                    Storyboard.TargetProperty="(TextBox.Foreground).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="Gray" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>

                            </DataTrigger.ExitActions>
                        </DataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ElementName=textBox, Path=IsFocused}"  Value="False"/>
                                <Condition Binding="{Binding ElementName=textBox, Path=Text}" Value="{x:Static sys:String.Empty}"/>
                            </MultiDataTrigger.Conditions>

                            <MultiDataTrigger.EnterActions>

                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation 
                                                            Storyboard.TargetName="textBlock" 
                                                            Duration="0:0:0.7" To="16" 
                                                            Storyboard.TargetProperty="FontSize">
                                            <DoubleAnimation.EasingFunction>
                                                <ElasticEase Oscillations="0"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>

                                        <ThicknessAnimation 
                                                            Storyboard.TargetName="textBlock" 
                                                            Duration="0:0:0.7" To="4 0 0 4" 
                                                            Storyboard.TargetProperty="Margin">
                                            <ThicknessAnimation.EasingFunction>
                                                <ElasticEase Oscillations="0"/>
                                            </ThicknessAnimation.EasingFunction>
                                        </ThicknessAnimation>
                                    </Storyboard>

                                </BeginStoryboard>

                            </MultiDataTrigger.EnterActions>
                            <MultiDataTrigger.ExitActions>

                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation 
                                                            Storyboard.TargetName="textBlock" 
                                                            Duration="0:0:0.7" To="14" 
                                                            Storyboard.TargetProperty="FontSize">
                                            <DoubleAnimation.EasingFunction>
                                                <ElasticEase Oscillations="0"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>

                                        <ThicknessAnimation 
                                                            Storyboard.TargetName="textBlock" 
                                                            Duration="0:0:0.7" To="2 -20 0 4" 
                                                            Storyboard.TargetProperty="Margin">
                                            <ThicknessAnimation.EasingFunction>
                                                <ElasticEase Oscillations="0"/>
                                            </ThicknessAnimation.EasingFunction>
                                        </ThicknessAnimation>

                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.ExitActions>
                        </MultiDataTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>